# Определить класс Point со свойствами color = 'red'   circle = 2
#
# Определить метод set_coords выводящий строку 'вызов метода set_coords'
#
# Копировать созданный класс в python console и обратиться к созданному методу через имя класса (посмотреть что выдаст).
#
# Далее вызвать этот метод тем же образом.
#
# Создать экземпляр класса pt.
#
# Обратиться к созданному методу через имя созданного объекта.( посмотреть вывод консоли).
#
# Попробовать его вызвать. Получить ошибку потому, что в методе не задан параметр self - ссылка на объект.
#
# Переопределить класс Point добавив в метод set_coords параметр self и дописать в методе 'вызов метода set_coords'
# добавив с помощью канкатенации вывод ссылки на объект в строковом представлении, копировать в консоль.
#
# Снова создать объект pt и вызвать метод. Убедиться что всё работает теперь и выводится адрес объекта.
#
# Попробовать теперь вызвать этот метод напрямую через имя класса. Убедиться что вылетает ошибка т.к. в данном случае
# self не подставляется автоматически в параметры. Подставить self и запустить еще раз убедиться что всё работает.
#
# Переопределить метод set_coords так чтоб он создавал новые локальные св-ва объекта x и y.
#
# Создать экземпляр pt и вызвать от его имени созданный метод с параметрами 1, 2
#
# Вывести получившиеся локальные св-ва экземпляра через дандер метод.
#
# Создать объект pt2 и через тот же метод тем же образом создать ему локальные св-ва x = 10  y = 20 и вывести их.
#
# Создать метод get_coords который возвращает текущие координаты наших точек в виде кортежа.
#
# Вызвать созданный метод через имена объектов и посмотреть вывод.
#
# Поскольку методы в классах по сути так же являются его свойствами(атрибутами) , то вывести метод get_coords с помощью
# метода
# getattr присвоив в переменную f. (чисто экспериментально)
