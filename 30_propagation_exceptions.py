#   РАСПРОСТРАНЕНИЕ ИСКЛЮЧЕНИЙ
# В отличии от ранее описанных ситуаций с исключениями, их на самомом деле может возникать великое
# множество и на разных уровнях. Напирмер:
# def func1():
#     return 1 / 0
# print("Я к вам пишу - чего же боле?")
# print("Что я могу еще сказать?")
# print("Теперь, я знаю, в  воле")
# func1() # в данном случае интерпретатор выдаст исключение аж на 2 строчки (5 и 9) это означает
# # что исключение ZeroDivisionError возникло на 5 строчке в функции func1, но сама эта ф-ция была
# # была вызвана на 9й строчке. Поэтому и передаётся в исключении 2 строки
# print("Меня презреньем наказать.")
# print("Но вы, к моей несчастной доле")
# print("Хоть каплю жалости храня,")
# print("Вы не оставите меня.")
# print()

# теперь предположим что ф-ция func1 вызывает в свою очередь ф-ю func2, что тогда будет происходить

# def func2():
#     return 1 / 0
#
# def func1():
#     return func2()
#
# print("Я к вам пишу - чего же боле?")
# print("Что я могу еще сказать?")
# print("Теперь, я знаю, в вашей воле")
# func1() # в данном случае интерпретатор выдаст исключение аж на 3 строчки (29,24  и 21) это означает
# # что исключение ZeroDivisionError возникло на 21 строчке в функции func2, и распространилось далее на фу-цию в которой
# # вызывалась эта самая ф-ция(а именно func1) и далее уже был сделан вызов в строчке 29!!!
# print("Меня презреньем наказать.")
# print("Но вы, к моей несчастной доле")
# print("Хоть каплю жалости храня,")
# print("Вы не оставите меня.")
# print()


#  обработку исключений в данном случае можно делать на любом из уровней:

# def func2():
#     return 1 / 0
#
# def func1():
#     return func2()
#
# print("Я к вам пишу - чего же боле?")
# print("Что я могу еще сказать?")
# print("Теперь, я знаю, в вашей воле")
# try:
#     func1() # в данном случае сработает исключение и просто выведет информацию func1 error
# except:
#     print("func1 error")
# print("Меня презреньем наказать.")
# print("Но вы, к моей несчастной доле")
# print("Хоть каплю жалости храня,")
# print("Вы не оставите меня.")
# print()

# как было выше упомянуто исключение можно вставить и на другой уроваень:

def func2():
    return 1 / 0

def func1():
    try: # в данном случае исключение вставили в функцию finc1()
        return func2()
    except:
        print("finc1 error")

print("Я к вам пишу - чего же боле?")
print("Что я могу еще сказать?")
print("Теперь, я знаю, в вашей воле")
func1() # в данном случае сработает исключение и просто выведет информацию func1 error
print("Меня презреньем наказать.")
print("Но вы, к моей несчастной доле")
print("Хоть каплю жалости храня,")
print("Вы не оставите меня.")
print()

# ну и естесственно на уровне функции func2 так же можно отлавливать исключения. при чём в данном случае
# ошибка отловится на уровне func2 и дальше уже на уровне func1 исключение срабатывать не будет! например:

def func2():
    try: # отлавливаем ошибку на уровне функции func2
        return 1 / 0
    except:
        print("func2 error")


def func1():
    try: # в данном случае исключение вставили в функцию finc1()
        return func2()
    except:
        print("finc1 error")

print("Я к вам пишу - чего же боле?")
print("Что я могу еще сказать?")
print("Теперь, я знаю, в вашей воле")
func1() # в данном случае сработает исключение и просто выведет информацию func2 error
print("Меня презреньем наказать.")
print("Но вы, к моей несчастной доле")
print("Хоть каплю жалости храня,")
print("Вы не оставите меня.")
print()


